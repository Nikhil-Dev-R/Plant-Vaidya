{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,8OAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/HistoryList.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from 'react';\nimport HistoryItem from './HistoryItem';\nimport type { HistoryEntry } from '@/types';\nimport { Button } from \"@/components/ui/button\";\nimport { Trash2, Info, Image as ImageIconLucide } from 'lucide-react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter,\n} from \"@/components/ui/dialog\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport Image from 'next/image';\nimport { format } from 'date-fns';\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\n\ninterface HistoryListProps {\n  history: HistoryEntry[];\n  onClearHistory: () => void;\n}\n\nexport default function HistoryList({ history, onClearHistory }: HistoryListProps) {\n  const [selectedEntry, setSelectedEntry] = useState<HistoryEntry | null>(null);\n\n  if (history.length === 0) {\n    return (\n      <div className=\"text-center py-12\">\n        <Info className=\"mx-auto h-12 w-12 text-muted-foreground mb-4\" />\n        <h3 className=\"text-xl font-semibold text-foreground mb-2\">No History Yet</h3>\n        <p className=\"text-muted-foreground\">Your plant analysis history will appear here once you analyze some plants.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-2xl font-semibold text-foreground\">Analysis History</h2>\n        <Button variant=\"destructive\" onClick={onClearHistory} size=\"sm\">\n          <Trash2 className=\"mr-2 h-4 w-4\" /> Clear All History\n        </Button>\n      </div>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {history.map((entry) => (\n          <HistoryItem key={entry.id} entry={entry} onViewDetails={setSelectedEntry} />\n        ))}\n      </div>\n\n      {selectedEntry && (\n        <Dialog open={!!selectedEntry} onOpenChange={(isOpen) => !isOpen && setSelectedEntry(null)}>\n          <DialogContent className=\"sm:max-w-lg max-h-[90vh]\">\n            <DialogHeader>\n              <DialogTitle className=\"flex items-center gap-2 text-xl\">\n                <ImageIconLucide className=\"h-5 w-5 text-primary\" />\n                {selectedEntry.originalImageName || \"Analysis Details\"}\n              </DialogTitle>\n              <DialogDescription>\n                Analyzed on {format(new Date(selectedEntry.date), \"MMMM d, yyyy 'at' h:mm a\")}\n              </DialogDescription>\n            </DialogHeader>\n            <ScrollArea className=\"max-h-[calc(90vh-12rem)] pr-2\">\n              <div className=\"space-y-4 py-4\">\n                <div className=\"rounded-md overflow-hidden border border-border\">\n                  <Image\n                    src={selectedEntry.imageDataUri}\n                    alt={selectedEntry.originalImageName || \"Analyzed plant\"}\n                    width={600}\n                    height={450}\n                    className=\"object-contain w-full max-h-[300px]\"\n                    data-ai-hint=\"plant agriculture\"\n                  />\n                </div>\n\n                {selectedEntry.description && (\n                  <div>\n                    <h4 className=\"font-semibold text-foreground\">Description Provided:</h4>\n                    <p className=\"text-sm text-muted-foreground bg-muted/30 p-2 rounded-md\">{selectedEntry.description}</p>\n                  </div>\n                )}\n\n                {selectedEntry.diseaseDetected ? (\n                  <Alert variant=\"destructive\">\n                    <AlertTriangle className=\"h-5 w-5\" />\n                    <AlertTitle>Disease: {selectedEntry.diseaseName || \"Unknown Disease\"}</AlertTitle>\n                  </Alert>\n                ) : (\n                  <Alert variant=\"default\" className=\"bg-primary/10 border-primary/30\">\n                    <CheckCircle2 className=\"h-5 w-5 text-primary\" />\n                    <AlertTitle className=\"text-primary\">Result: {selectedEntry.diseaseName || \"Healthy\"}</AlertTitle>\n                  </Alert>\n                )}\n\n                {selectedEntry.suggestedSolutions && selectedEntry.suggestedSolutions.length > 0 && (\n                  <div>\n                    <h4 className=\"font-semibold text-foreground\">Suggested Solutions:</h4>\n                    <ul className=\"list-disc list-inside space-y-1 pl-4 text-sm text-foreground/90 bg-muted/30 p-3 rounded-md\">\n                      {selectedEntry.suggestedSolutions.map((solution, index) => (\n                        <li key={index}>{solution}</li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n                 {(!selectedEntry.suggestedSolutions || selectedEntry.suggestedSolutions.length === 0) && (\n                   <p className=\"text-sm text-muted-foreground\">No specific solutions were provided in this analysis.</p>\n                 )}\n              </div>\n            </ScrollArea>\n            <DialogFooter>\n              <Button variant=\"outline\" onClick={() => setSelectedEntry(null)}>Close</Button>\n            </DialogFooter>\n          </DialogContent>\n        </Dialog>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 686, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/LoadingSpinner.tsx"],"sourcesContent":["import { Loader2 } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\ninterface LoadingSpinnerProps {\n  className?: string;\n  size?: number;\n}\n\nexport default function LoadingSpinner({ className, size = 24 }: LoadingSpinnerProps) {\n  return (\n    <Loader2\n      className={cn('animate-spin text-primary', className)}\n      style={{ width: size, height: size }}\n      aria-label=\"Loading...\"\n    />\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAOe,SAAS,eAAe,EAAE,SAAS,EAAE,OAAO,EAAE,EAAuB;IAClF,qBACE,8OAAC,iNAAA,CAAA,UAAO;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,6BAA6B;QAC3C,OAAO;YAAE,OAAO;YAAM,QAAQ;QAAK;QACnC,cAAW;;;;;;AAGjB","debugId":null}},
    {"offset": {"line": 715, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/useHistory.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useCallback } from 'react';\nimport type { HistoryEntry } from '@/types';\n\nconst HISTORY_STORAGE_KEY = 'verdantViewHistory';\n\nexport function useHistory() {\n  const [history, setHistory] = useState<HistoryEntry[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    try {\n      const storedHistory = localStorage.getItem(HISTORY_STORAGE_KEY);\n      if (storedHistory) {\n        setHistory(JSON.parse(storedHistory));\n      }\n    } catch (error) {\n      console.error(\"Failed to load history from localStorage:\", error);\n      // Optionally, clear corrupted data or handle error\n      // localStorage.removeItem(HISTORY_STORAGE_KEY);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const addHistoryEntry = useCallback((entry: Omit<HistoryEntry, 'id' | 'date'>) => {\n    setHistory(prevHistory => {\n      const newEntry: HistoryEntry = {\n        ...entry,\n        id: Date.now().toString(), // Simple unique ID\n        date: new Date().toISOString(),\n      };\n      const updatedHistory = [newEntry, ...prevHistory].slice(0, 50); // Limit history size\n      try {\n        localStorage.setItem(HISTORY_STORAGE_KEY, JSON.stringify(updatedHistory));\n      } catch (error) {\n        console.error(\"Failed to save history to localStorage:\", error);\n      }\n      return updatedHistory;\n    });\n  }, []);\n\n  const clearHistory = useCallback(() => {\n    setHistory([]);\n    try {\n      localStorage.removeItem(HISTORY_STORAGE_KEY);\n    } catch (error) {\n      console.error(\"Failed to clear history from localStorage:\", error);\n    }\n  }, []);\n  \n  const getHistoryEntryById = useCallback((id: string): HistoryEntry | undefined => {\n    return history.find(entry => entry.id === id);\n  }, [history]);\n\n\n  return { history, addHistoryEntry, clearHistory, isLoading, getHistoryEntryById };\n}\n"],"names":[],"mappings":";;;AAEA;AAFA;;AAKA,MAAM,sBAAsB;AAErB,SAAS;IACd,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IACzD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI;YACF,MAAM,gBAAgB,aAAa,OAAO,CAAC;YAC3C,IAAI,eAAe;gBACjB,WAAW,KAAK,KAAK,CAAC;YACxB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6CAA6C;QAC3D,mDAAmD;QACnD,gDAAgD;QAClD,SAAU;YACR,aAAa;QACf;IACF,GAAG,EAAE;IAEL,MAAM,kBAAkB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QACnC,WAAW,CAAA;YACT,MAAM,WAAyB;gBAC7B,GAAG,KAAK;gBACR,IAAI,KAAK,GAAG,GAAG,QAAQ;gBACvB,MAAM,IAAI,OAAO,WAAW;YAC9B;YACA,MAAM,iBAAiB;gBAAC;mBAAa;aAAY,CAAC,KAAK,CAAC,GAAG,KAAK,qBAAqB;YACrF,IAAI;gBACF,aAAa,OAAO,CAAC,qBAAqB,KAAK,SAAS,CAAC;YAC3D,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,2CAA2C;YAC3D;YACA,OAAO;QACT;IACF,GAAG,EAAE;IAEL,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAC/B,WAAW,EAAE;QACb,IAAI;YACF,aAAa,UAAU,CAAC;QAC1B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8CAA8C;QAC9D;IACF,GAAG,EAAE;IAEL,MAAM,sBAAsB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QACvC,OAAO,QAAQ,IAAI,CAAC,CAAA,QAAS,MAAM,EAAE,KAAK;IAC5C,GAAG;QAAC;KAAQ;IAGZ,OAAO;QAAE;QAAS;QAAiB;QAAc;QAAW;IAAoB;AAClF","debugId":null}},
    {"offset": {"line": 785, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/history/page.tsx"],"sourcesContent":["\"use client\";\n\nimport HistoryList from '@/components/HistoryList';\nimport LoadingSpinner from '@/components/LoadingSpinner';\nimport { useHistory } from '@/hooks/useHistory';\nimport { AlertCircle } from 'lucide-react';\n\nexport default function HistoryPage() {\n  const { history, clearHistory, isLoading } = useHistory();\n\n  if (isLoading) {\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-[calc(100vh-10rem)]\">\n        <LoadingSpinner size={48} />\n        <p className=\"mt-4 text-lg text-primary\">Loading history...</p>\n      </div>\n    );\n  }\n  \n  // This case should ideally be handled by HistoryList, but as a fallback:\n  if (!isLoading && history.length === 0) {\n     return <HistoryList history={[]} onClearHistory={() => {}} />;\n  }\n\n  return <HistoryList history={history} onClearHistory={clearHistory} />;\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAOe,SAAS;IACtB,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,0HAAA,CAAA,aAAU,AAAD;IAEtD,IAAI,WAAW;QACb,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC,oIAAA,CAAA,UAAc;oBAAC,MAAM;;;;;;8BACtB,8OAAC;oBAAE,WAAU;8BAA4B;;;;;;;;;;;;IAG/C;IAEA,yEAAyE;IACzE,IAAI,CAAC,aAAa,QAAQ,MAAM,KAAK,GAAG;QACrC,qBAAO,8OAAC,iIAAA,CAAA,UAAW;YAAC,SAAS,EAAE;YAAE,gBAAgB,KAAO;;;;;;IAC3D;IAEA,qBAAO,8OAAC,iIAAA,CAAA,UAAW;QAAC,SAAS;QAAS,gBAAgB;;;;;;AACxD","debugId":null}}]
}