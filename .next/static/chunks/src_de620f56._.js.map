{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/PlantAnalysisForm.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, type FormEvent, useRef, ChangeEvent } from 'react';\nimport Image from 'next/image';\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { UploadCloud, Sparkles, ImageOff } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\n\ninterface PlantAnalysisFormProps {\n  onSubmit: (photoDataUri: string, description: string, originalImageName: string) => void;\n  isAnalyzing: boolean;\n}\n\nexport default function PlantAnalysisForm({ onSubmit, isAnalyzing }: PlantAnalysisFormProps) {\n  const [description, setDescription] = useState('');\n  const [imagePreview, setImagePreview] = useState<string | null>(null);\n  const [imageFile, setImageFile] = useState<File | null>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const { toast } = useToast();\n\n  const handleImageChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      if (file.size > 5 * 1024 * 1024) { // 5MB limit\n        toast({\n          variant: \"destructive\",\n          title: \"Image too large\",\n          description: \"Please upload an image smaller than 5MB.\",\n        });\n        if (fileInputRef.current) {\n            fileInputRef.current.value = \"\"; // Reset file input\n        }\n        setImageFile(null);\n        setImagePreview(null);\n        return;\n      }\n      setImageFile(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result as string);\n      };\n      reader.readAsDataURL(file);\n    } else {\n      setImageFile(null);\n      setImagePreview(null);\n    }\n  };\n\n  const handleSubmit = async (event: FormEvent) => {\n    event.preventDefault();\n    if (!imageFile || !imagePreview) {\n      toast({\n        variant: \"destructive\",\n        title: \"No image selected\",\n        description: \"Please upload an image of your plant.\",\n      });\n      return;\n    }\n    onSubmit(imagePreview, description, imageFile.name);\n  };\n\n  return (\n    <Card className=\"w-full max-w-lg mx-auto shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"text-2xl flex items-center gap-2\">\n          <Sparkles className=\"text-primary h-6 w-6\" />\n          Analyze Your Plant\n        </CardTitle>\n        <CardDescription>\n          Upload an image and add a description to detect potential plant diseases.\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"plant-image\" className=\"text-base\">Plant Image</Label>\n            <Input\n              id=\"plant-image\"\n              type=\"file\"\n              accept=\"image/png, image/jpeg, image/webp\"\n              onChange={handleImageChange}\n              ref={fileInputRef}\n              className=\"file:text-primary file:font-semibold hover:file:bg-primary/10\"\n              aria-describedby=\"plant-image-hint\"\n            />\n            <p id=\"plant-image-hint\" className=\"text-sm text-muted-foreground\">\n              PNG, JPG, WEBP. Max 5MB.\n            </p>\n          </div>\n\n          {imagePreview && (\n            <div className=\"mt-4 border border-border rounded-md p-2 bg-muted/30\">\n              <Image\n                src={imagePreview}\n                alt=\"Plant preview\"\n                width={400}\n                height={300}\n                className=\"rounded-md object-contain max-h-[300px] w-full\"\n                data-ai-hint=\"plant agriculture\"\n              />\n            </div>\n          )}\n          {!imagePreview && (\n             <div className=\"mt-4 border border-dashed border-border rounded-md p-8 flex flex-col items-center justify-center bg-muted/30 h-[200px]\">\n                <ImageOff className=\"h-16 w-16 text-muted-foreground mb-2\" />\n                <p className=\"text-muted-foreground\">Image preview will appear here</p>\n             </div>\n          )}\n\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"plant-description\" className=\"text-base\">Description (Optional)</Label>\n            <Textarea\n              id=\"plant-description\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              placeholder=\"e.g., Yellow spots on leaves, wilting stems, etc.\"\n              rows={3}\n              className=\"resize-none\"\n            />\n          </div>\n\n          <Button type=\"submit\" disabled={isAnalyzing || !imageFile} className=\"w-full text-base py-3\">\n            {isAnalyzing ? (\n              <>\n                <UploadCloud className=\"mr-2 h-5 w-5 animate-pulse\" />\n                Analyzing...\n              </>\n            ) : (\n              <>\n                <Sparkles className=\"mr-2 h-5 w-5\" />\n                Analyze Plant\n              </>\n            )}\n          </Button>\n        </form>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 580, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,6LAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 657, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/AnalysisResult.tsx"],"sourcesContent":["\"use client\";\n\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { CheckCircle2, AlertTriangle, ListChecks, Leaf } from 'lucide-react';\nimport type { AnalysisResultData } from '@/types';\n\ninterface AnalysisResultProps {\n  result: AnalysisResultData | null;\n}\n\nexport default function AnalysisResult({ result }: AnalysisResultProps) {\n  if (!result) return null;\n\n  return (\n    <Card className=\"w-full max-w-lg mx-auto mt-8 shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"text-2xl flex items-center gap-2\">\n          <Leaf className=\"text-primary h-6 w-6\" />\n          Analysis Results\n        </CardTitle>\n        <CardDescription>\n          Here's what our AI found about your plant.\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {result.diseaseDetected ? (\n          <Alert variant=\"destructive\">\n            <AlertTriangle className=\"h-5 w-5\" />\n            <AlertTitle className=\"font-semibold\">Disease Detected: {result.diseaseName || \"Unknown Disease\"}</AlertTitle>\n            <AlertDescription>\n              Your plant may be affected. See suggestions below.\n            </AlertDescription>\n          </Alert>\n        ) : (\n          <Alert variant=\"default\" className=\"bg-primary/10 border-primary/30\">\n            <CheckCircle2 className=\"h-5 w-5 text-primary\" />\n            <AlertTitle className=\"font-semibold text-primary\">No Disease Detected</AlertTitle>\n            <AlertDescription>\n              Your plant appears to be healthy based on the analysis.\n            </AlertDescription>\n          </Alert>\n        )}\n\n        {result.suggestedSolutions && result.suggestedSolutions.length > 0 && (\n          <div>\n            <h3 className=\"text-lg font-semibold mb-2 flex items-center gap-2\">\n              <ListChecks className=\"text-accent h-5 w-5\" />\n              Suggested Actions:\n            </h3>\n            <ul className=\"list-disc list-inside space-y-1 pl-2 text-foreground/90 bg-muted/30 p-3 rounded-md\">\n              {result.suggestedSolutions.map((solution, index) => (\n                <li key={index}>{solution}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n\n        {!result.diseaseDetected && (!result.suggestedSolutions || result.suggestedSolutions.length === 0) && (\n           <p className=\"text-sm text-muted-foreground\">Keep up the good work with your plant care!</p>\n        )}\n         {result.diseaseDetected && (!result.suggestedSolutions || result.suggestedSolutions.length === 0) && (\n           <p className=\"text-sm text-muted-foreground\">No specific solutions were suggested for the detected issue. Consider general plant care or consulting a local expert.</p>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAJA;;;;;AAWe,SAAS,eAAe,EAAE,MAAM,EAAuB;IACpE,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,6LAAC,mIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,6LAAC,mIAAA,CAAA,aAAU;;kCACT,6LAAC,mIAAA,CAAA,YAAS;wBAAC,WAAU;;0CACnB,6LAAC,qMAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;4BAAyB;;;;;;;kCAG3C,6LAAC,mIAAA,CAAA,kBAAe;kCAAC;;;;;;;;;;;;0BAInB,6LAAC,mIAAA,CAAA,cAAW;gBAAC,WAAU;;oBACpB,OAAO,eAAe,iBACrB,6LAAC,oIAAA,CAAA,QAAK;wBAAC,SAAQ;;0CACb,6LAAC,2NAAA,CAAA,gBAAa;gCAAC,WAAU;;;;;;0CACzB,6LAAC,oIAAA,CAAA,aAAU;gCAAC,WAAU;;oCAAgB;oCAAmB,OAAO,WAAW,IAAI;;;;;;;0CAC/E,6LAAC,oIAAA,CAAA,mBAAgB;0CAAC;;;;;;;;;;;6CAKpB,6LAAC,oIAAA,CAAA,QAAK;wBAAC,SAAQ;wBAAU,WAAU;;0CACjC,6LAAC,wNAAA,CAAA,eAAY;gCAAC,WAAU;;;;;;0CACxB,6LAAC,oIAAA,CAAA,aAAU;gCAAC,WAAU;0CAA6B;;;;;;0CACnD,6LAAC,oIAAA,CAAA,mBAAgB;0CAAC;;;;;;;;;;;;oBAMrB,OAAO,kBAAkB,IAAI,OAAO,kBAAkB,CAAC,MAAM,GAAG,mBAC/D,6LAAC;;0CACC,6LAAC;gCAAG,WAAU;;kDACZ,6LAAC,qNAAA,CAAA,aAAU;wCAAC,WAAU;;;;;;oCAAwB;;;;;;;0CAGhD,6LAAC;gCAAG,WAAU;0CACX,OAAO,kBAAkB,CAAC,GAAG,CAAC,CAAC,UAAU,sBACxC,6LAAC;kDAAgB;uCAAR;;;;;;;;;;;;;;;;oBAMhB,CAAC,OAAO,eAAe,IAAI,CAAC,CAAC,OAAO,kBAAkB,IAAI,OAAO,kBAAkB,CAAC,MAAM,KAAK,CAAC,mBAC9F,6LAAC;wBAAE,WAAU;kCAAgC;;;;;;oBAE9C,OAAO,eAAe,IAAI,CAAC,CAAC,OAAO,kBAAkB,IAAI,OAAO,kBAAkB,CAAC,MAAM,KAAK,CAAC,mBAC9F,6LAAC;wBAAE,WAAU;kCAAgC;;;;;;;;;;;;;;;;;;AAKxD;KAxDwB","debugId":null}},
    {"offset": {"line": 857, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/LoadingSpinner.tsx"],"sourcesContent":["import { Loader2 } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\ninterface LoadingSpinnerProps {\n  className?: string;\n  size?: number;\n}\n\nexport default function LoadingSpinner({ className, size = 24 }: LoadingSpinnerProps) {\n  return (\n    <Loader2\n      className={cn('animate-spin text-primary', className)}\n      style={{ width: size, height: size }}\n      aria-label=\"Loading...\"\n    />\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAOe,SAAS,eAAe,EAAE,SAAS,EAAE,OAAO,EAAE,EAAuB;IAClF,qBACE,6LAAC,oNAAA,CAAA,UAAO;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,6BAA6B;QAC3C,OAAO;YAAE,OAAO;YAAM,QAAQ;QAAK;QACnC,cAAW;;;;;;AAGjB;KARwB","debugId":null}},
    {"offset": {"line": 892, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/useHistory.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useCallback } from 'react';\nimport type { HistoryEntry } from '@/types';\n\nconst HISTORY_STORAGE_KEY = 'verdantViewHistory';\n\nexport function useHistory() {\n  const [history, setHistory] = useState<HistoryEntry[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    try {\n      const storedHistory = localStorage.getItem(HISTORY_STORAGE_KEY);\n      if (storedHistory) {\n        setHistory(JSON.parse(storedHistory));\n      }\n    } catch (error) {\n      console.error(\"Failed to load history from localStorage:\", error);\n      // Optionally, clear corrupted data or handle error\n      // localStorage.removeItem(HISTORY_STORAGE_KEY);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const addHistoryEntry = useCallback((entry: Omit<HistoryEntry, 'id' | 'date'>) => {\n    setHistory(prevHistory => {\n      const newEntry: HistoryEntry = {\n        ...entry,\n        id: Date.now().toString(), // Simple unique ID\n        date: new Date().toISOString(),\n      };\n      const updatedHistory = [newEntry, ...prevHistory].slice(0, 50); // Limit history size\n      try {\n        localStorage.setItem(HISTORY_STORAGE_KEY, JSON.stringify(updatedHistory));\n      } catch (error) {\n        console.error(\"Failed to save history to localStorage:\", error);\n      }\n      return updatedHistory;\n    });\n  }, []);\n\n  const clearHistory = useCallback(() => {\n    setHistory([]);\n    try {\n      localStorage.removeItem(HISTORY_STORAGE_KEY);\n    } catch (error) {\n      console.error(\"Failed to clear history from localStorage:\", error);\n    }\n  }, []);\n  \n  const getHistoryEntryById = useCallback((id: string): HistoryEntry | undefined => {\n    return history.find(entry => entry.id === id);\n  }, [history]);\n\n\n  return { history, addHistoryEntry, clearHistory, isLoading, getHistoryEntryById };\n}\n"],"names":[],"mappings":";;;AAEA;;AAFA;;AAKA,MAAM,sBAAsB;AAErB,SAAS;;IACd,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IACzD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,IAAI;gBACF,MAAM,gBAAgB,aAAa,OAAO,CAAC;gBAC3C,IAAI,eAAe;oBACjB,WAAW,KAAK,KAAK,CAAC;gBACxB;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,6CAA6C;YAC3D,mDAAmD;YACnD,gDAAgD;YAClD,SAAU;gBACR,aAAa;YACf;QACF;+BAAG,EAAE;IAEL,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;mDAAE,CAAC;YACnC;2DAAW,CAAA;oBACT,MAAM,WAAyB;wBAC7B,GAAG,KAAK;wBACR,IAAI,KAAK,GAAG,GAAG,QAAQ;wBACvB,MAAM,IAAI,OAAO,WAAW;oBAC9B;oBACA,MAAM,iBAAiB;wBAAC;2BAAa;qBAAY,CAAC,KAAK,CAAC,GAAG,KAAK,qBAAqB;oBACrF,IAAI;wBACF,aAAa,OAAO,CAAC,qBAAqB,KAAK,SAAS,CAAC;oBAC3D,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,2CAA2C;oBAC3D;oBACA,OAAO;gBACT;;QACF;kDAAG,EAAE;IAEL,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;gDAAE;YAC/B,WAAW,EAAE;YACb,IAAI;gBACF,aAAa,UAAU,CAAC;YAC1B,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,8CAA8C;YAC9D;QACF;+CAAG,EAAE;IAEL,MAAM,sBAAsB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;uDAAE,CAAC;YACvC,OAAO,QAAQ,IAAI;+DAAC,CAAA,QAAS,MAAM,EAAE,KAAK;;QAC5C;sDAAG;QAAC;KAAQ;IAGZ,OAAO;QAAE;QAAS;QAAiB;QAAc;QAAW;IAAoB;AAClF;GAnDgB","debugId":null}},
    {"offset": {"line": 980, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/analyze-plant-disease.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview Analyzes a plant disease from an image and suggests solutions.\n *\n * - analyzePlantDisease - A function that handles the plant disease analysis process.\n * - AnalyzePlantDiseaseInput - The input type for the analyzePlantDisease function.\n * - AnalyzePlantDiseaseOutput - The return type for the analyzePlantDisease function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst AnalyzePlantDiseaseInputSchema = z.object({\n  photoDataUri: z\n    .string()\n    .describe(\n      \"A photo of a plant, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'.\"\n    ),\n  description: z.string().describe('The description of the plant.'),\n});\nexport type AnalyzePlantDiseaseInput = z.infer<typeof AnalyzePlantDiseaseInputSchema>;\n\nconst AnalyzePlantDiseaseOutputSchema = z.object({\n  diseaseDetected: z.boolean().describe('Whether a disease was detected or not.'),\n  diseaseName: z.string().describe('The name of the detected disease, if any.'),\n  suggestedSolutions: z\n    .array(z.string())\n    .describe('A list of suggested solutions for the detected disease.'),\n});\nexport type AnalyzePlantDiseaseOutput = z.infer<typeof AnalyzePlantDiseaseOutputSchema>;\n\nexport async function analyzePlantDisease(input: AnalyzePlantDiseaseInput): Promise<AnalyzePlantDiseaseOutput> {\n  return analyzePlantDiseaseFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'analyzePlantDiseasePrompt',\n  input: {schema: AnalyzePlantDiseaseInputSchema},\n  output: {schema: AnalyzePlantDiseaseOutputSchema},\n  prompt: `You are an expert in plant diseases.\n\n  Analyze the following plant image and description to detect potential diseases and suggest possible solutions.\n\n  Description: {{{description}}}\n  Image: {{media url=photoDataUri}}\n\n  Output should be structured as follows:\n  - diseaseDetected: true if a disease is detected, false otherwise.\n  - diseaseName: The name of the detected disease, if any.\n  - suggestedSolutions: A list of suggested solutions for the detected disease.\n  `,\n});\n\nconst analyzePlantDiseaseFlow = ai.defineFlow(\n  {\n    name: 'analyzePlantDiseaseFlow',\n    inputSchema: AnalyzePlantDiseaseInputSchema,\n    outputSchema: AnalyzePlantDiseaseOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;IA+BsB","debugId":null}},
    {"offset": {"line": 992, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/reason-about-plant-suggestions.ts"],"sourcesContent":["// 'use server';\n\n/**\n * @fileOverview This flow filters plant suggestions based on the plant's condition.\n *\n * - reasonAboutPlantSuggestions - A function that filters plant suggestions based on the plant's condition.\n * - ReasonAboutPlantSuggestionsInput - The input type for the reasonAboutPlantSuggestions function.\n * - ReasonAboutPlantSuggestionsOutput - The return type for the reasonAboutPlantSuggestions function.\n */\n\n'use server';\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst ReasonAboutPlantSuggestionsInputSchema = z.object({\n  plantCondition: z.string().describe('The condition of the plant.'),\n  allSuggestions: z.array(z.string()).describe('All possible suggestions for plant care.'),\n});\nexport type ReasonAboutPlantSuggestionsInput = z.infer<typeof ReasonAboutPlantSuggestionsInputSchema>;\n\nconst ReasonAboutPlantSuggestionsOutputSchema = z.array(z.string()).describe('The filtered suggestions relevant to the plant condition.');\nexport type ReasonAboutPlantSuggestionsOutput = z.infer<typeof ReasonAboutPlantSuggestionsOutputSchema>;\n\nexport async function reasonAboutPlantSuggestions(input: ReasonAboutPlantSuggestionsInput): Promise<ReasonAboutPlantSuggestionsOutput> {\n  return reasonAboutPlantSuggestionsFlow(input);\n}\n\nconst suggestionFilterPrompt = ai.definePrompt({\n  name: 'suggestionFilterPrompt',\n  input: {schema: ReasonAboutPlantSuggestionsInputSchema},\n  output: {schema: ReasonAboutPlantSuggestionsOutputSchema},\n  prompt: `Given the following plant condition: {{{plantCondition}}}, and a list of suggestions: {{{allSuggestions}}}, filter the suggestions to only include those that are relevant to the plant's condition. Return the filtered list of suggestions.\n\n  Instructions:  Do not return any suggestions that are not relevant to the plant's condition. Only respond with the suggestions, each on their own line. Do not include any other text. If no suggestions are relevant, return an empty array.`, \n});\n\nconst reasonAboutPlantSuggestionsFlow = ai.defineFlow(\n  {\n    name: 'reasonAboutPlantSuggestionsFlow',\n    inputSchema: ReasonAboutPlantSuggestionsInputSchema,\n    outputSchema: ReasonAboutPlantSuggestionsOutputSchema,\n  },\n  async input => {\n    const {output} = await suggestionFilterPrompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":"AAAA,gBAAgB;AAEhB;;;;;;CAMC;;;;;IAgBqB","debugId":null}},
    {"offset": {"line": 1011, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/constants.ts"],"sourcesContent":["export const ALL_PLANT_SUGGESTIONS: string[] = [\n  \"Ensure proper watering schedule based on plant type and soil moisture.\",\n  \"Check for adequate sunlight exposure, ensuring it matches plant's needs.\",\n  \"Improve soil drainage if waterlogging is observed.\",\n  \"Apply an appropriate fungicide if fungal infection is suspected.\",\n  \"Prune affected leaves, stems, or branches using sterile tools.\",\n  \"Isolate the plant from healthy ones to prevent disease spread.\",\n  \"Use organic pest control methods like neem oil or insecticidal soap for pests.\",\n  \"Fertilize with a balanced plant food suitable for the specific plant.\",\n  \"Repot into fresh, sterile potting mix if root rot or soil-borne diseases are present.\",\n  \"Monitor and adjust humidity levels, especially for tropical plants.\",\n  \"Inspect regularly for early signs of pests or diseases.\",\n  \"Ensure good air circulation around the plant.\",\n  \"Avoid over-fertilizing, which can harm the plant.\",\n  \"Water at the base of the plant to keep foliage dry and reduce fungal risk.\",\n  \"Use mulch to retain soil moisture and suppress weeds.\",\n  \"Adjust watering frequency according to seasons and plant growth stages.\",\n  \"Consider companion planting to deter pests naturally.\",\n  \"If disease is severe, consider disposing of the plant to protect others.\"\n];\n"],"names":[],"mappings":";;;AAAO,MAAM,wBAAkC;IAC7C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD","debugId":null}},
    {"offset": {"line": 1043, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from 'react';\nimport PlantAnalysisForm from '@/components/PlantAnalysisForm';\nimport AnalysisResult from '@/components/AnalysisResult';\nimport LoadingSpinner from '@/components/LoadingSpinner';\nimport { useToast } from '@/hooks/use-toast';\nimport { useHistory } from '@/hooks/useHistory';\nimport { analyzePlantDisease } from '@/ai/flows/analyze-plant-disease';\nimport type { AnalyzePlantDiseaseOutput } from '@/ai/flows/analyze-plant-disease';\nimport { reasonAboutPlantSuggestions } from '@/ai/flows/reason-about-plant-suggestions';\nimport type { AnalysisResultData } from '@/types';\nimport { ALL_PLANT_SUGGESTIONS } from '@/lib/constants';\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { Terminal } from \"lucide-react\";\n\n\nexport default function HomePage() {\n  const [analysisResult, setAnalysisResult] = useState<AnalysisResultData | null>(null);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const { toast } = useToast();\n  const { addHistoryEntry } = useHistory();\n\n  const handleAnalysisSubmit = async (photoDataUri: string, description: string, originalImageName: string) => {\n    setIsAnalyzing(true);\n    setError(null);\n    setAnalysisResult(null);\n\n    try {\n      const diseaseAnalysis: AnalyzePlantDiseaseOutput = await analyzePlantDisease({\n        photoDataUri,\n        description,\n      });\n\n      let finalSuggestions = diseaseAnalysis.suggestedSolutions || [];\n\n      if (diseaseAnalysis.diseaseDetected && diseaseAnalysis.diseaseName) {\n         // Use a broader set of suggestions if the AI didn't provide any for a detected disease.\n        const suggestionsToFilter = (diseaseAnalysis.suggestedSolutions && diseaseAnalysis.suggestedSolutions.length > 0) \n                                    ? diseaseAnalysis.suggestedSolutions\n                                    : ALL_PLANT_SUGGESTIONS;\n        \n        const filteredSuggestions = await reasonAboutPlantSuggestions({\n          plantCondition: diseaseAnalysis.diseaseName,\n          allSuggestions: suggestionsToFilter,\n        });\n        finalSuggestions = filteredSuggestions.length > 0 ? filteredSuggestions : (diseaseAnalysis.suggestedSolutions || []);\n      } else if (!diseaseAnalysis.diseaseDetected) {\n        // If no disease detected, we might still want to offer general advice based on description\n        // For now, if no disease, no specific suggestions unless AI provided some.\n        // Or, we could use reasonAboutPlantSuggestions with a generic \"healthy plant\" condition\n        // For simplicity, we'll use AI's suggestions or empty if none.\n        finalSuggestions = diseaseAnalysis.suggestedSolutions || [];\n      }\n\n\n      const resultData: AnalysisResultData = {\n        diseaseDetected: diseaseAnalysis.diseaseDetected,\n        diseaseName: diseaseAnalysis.diseaseName || (diseaseAnalysis.diseaseDetected ? \"Unknown Issue\" : \"Healthy\"),\n        suggestedSolutions: finalSuggestions,\n      };\n      \n      setAnalysisResult(resultData);\n      addHistoryEntry({\n        imageDataUri: photoDataUri,\n        originalImageName,\n        description,\n        ...resultData,\n      });\n\n      toast({\n        title: \"Analysis Complete\",\n        description: diseaseAnalysis.diseaseDetected \n          ? `Detected: ${diseaseAnalysis.diseaseName || \"Unknown Issue\"}`\n          : \"Plant appears healthy!\",\n      });\n\n    } catch (e: any) {\n      console.error(\"Analysis failed:\", e);\n      const errorMessage = e.message || \"An unknown error occurred during analysis.\";\n      setError(errorMessage);\n      toast({\n        variant: \"destructive\",\n        title: \"Analysis Failed\",\n        description: errorMessage,\n      });\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center space-y-8\">\n      <PlantAnalysisForm onSubmit={handleAnalysisSubmit} isAnalyzing={isAnalyzing} />\n      \n      {isAnalyzing && (\n        <div className=\"flex flex-col items-center space-y-2 p-4\">\n          <LoadingSpinner size={48} />\n          <p className=\"text-lg text-primary animate-pulse\">Analyzing your plant, please wait...</p>\n        </div>\n      )}\n\n      {error && (\n         <Alert variant=\"destructive\" className=\"w-full max-w-lg mx-auto\">\n           <Terminal className=\"h-4 w-4\" />\n           <AlertTitle>Error</AlertTitle>\n           <AlertDescription>\n             {error}\n           </AlertDescription>\n         </Alert>\n      )}\n\n      {analysisResult && !isAnalyzing && <AnalysisResult result={analysisResult} />}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}